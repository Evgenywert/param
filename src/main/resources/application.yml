spring:
  application:
    name: booking

  datasource:
    url: jdbc:postgresql://localhost:5432/booking
    username: booking
    password: booking

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true
        show_sql: false

  flyway:
    enabled: true
    locations: classpath:db/migration

  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: booking-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"

  data:
    redis:
      host: localhost
      port: 6379

server:
  port: 8080

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.transaction: TRACE
    com.bookingservice.booking.service.impl.BookingServiceImpl: DEBUG
    com.bookingservice.booking.kafka:

management:
  endpoints:
    web:
      exposure:
        include: "health,info,metrics,prometheus,env,beans,loggers"
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: booking-service